//
// Proto definition for rpsl-parser and associated rpsl tools.

syntax = "proto3";
package rpsl.proto;

// Type is the ENUM of various record types that are possible
// in standard RPSL.
enum Type {
  UNKNOWN = 0;
  EOF = 1;
  ADDRESS = 16;
  ADMINC = 17;
  AGGRBNDRY = 18;
  AGGRMTD = 19;
  ALIAS = 20;
  ASNAME = 21;
  ASSET = 22;
  AUTH = 23;
  AUTNUM = 24;
  CERTIF = 25;
  CHANGED = 26;
  COMPONENTS = 27;
  COUNTRY = 28;
  DEFAULT = 29;
  DESCR = 30;
  EMAIL = 31;
  EXPORT = 32;
  EXPORTCOMPS = 33;
  EXPORTVIA = 34;
  FAXNO = 35;
  FILTER = 36;
  FILTERSET = 37;
  FINGERPR = 39;
  GEOIDX = 40;
  HOLES = 41;
  IFADDR = 42;
  IMPORT = 43;
  IMPORTVIA = 44;
  INET6NUM = 45;
  INETNUM = 46;
  INETRTR = 47;
  INTERFACE = 48;
  KEYCERT = 49;
  LOCALAS = 50;
  MBRSBYREF = 51;
  MEMBEROF = 52;
  MEMBERS = 53;
  METHOD = 54;
  MNTBY = 55;
  MNTNER = 56;
  MNTNFY = 57;
  MPEXPORT = 58;
  MPFILTER = 59;
  MPIMPORT = 60;
  MPMEMBERS = 61;
  MPPEER = 62;
  MPPEERING = 63;
  NETNAME = 64;
  NICHDL = 65;
  NOTIFY = 66;
  ORIGIN = 67;
  OWNER = 68;
  PEER = 69;
  PEERING = 70;
  PEERINGSET = 71;
  PERSON = 72;
  PHONE = 73;
  REMARKS = 74;
  ROAURI = 75;
  ROLE = 76;
  ROUTE = 77;
  ROUTE6 = 78;
  ROUTESET = 79;
  RSIN = 80;
  RSOUT = 81;
  RTRSET = 82;
  SOURCE = 83;
  STATUS = 84;
  TECHC = 85;
  TROUBLE = 86;
  UPDTO = 87;
  XXE = 88;
  XXNER = 89;
  XXNUM = 90;
  XXRINGSET = 91;
  XXSET = 92;
  XXSON = 93;
  XXTE = 94;
  XXTE6 = 95;
  XXTESET = 96;
}

message KeyValue {
  Type key = 1;
  string value = 2;
}
//
// Record, a single rpsl record.
message Record {
  Type type = 1;
  repeated KeyValue fields = 2;
}
